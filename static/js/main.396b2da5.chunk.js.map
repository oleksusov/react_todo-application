{"version":3,"sources":["components/Header/Header.tsx","components/TodoItem/TodoItem.tsx","types/Status.ts","components/TodoList/TodoList.tsx","components/FilterNavLink/FilterNavLink.tsx","components/TodosFilter/TodosFilter.tsx","components/Footer/Footer.tsx","App.tsx","utils/CustomHooks.tsx","index.tsx"],"names":["Header","_ref","addNewTodo","_useState","useState","_useState2","_slicedToArray","title","setTitle","_jsxs","className","children","_jsx","onSubmit","event","preventDefault","trim","length","newTodo","id","Date","completed","type","placeholder","value","onChange","target","TodoItem","todo","todos","setTodos","isFormActive","setIsFormActive","inputRef","useRef","_useState3","_useState4","newTitle","setNewTitle","deleteTodo","todoId","filter","item","handleSubmit","updatedTitle","map","_objectSpread","useEffect","current","focus","classNames","editing","onDoubleClick","ref","onKeyUp","key","onBlur","concat","checked","itemId","htmlFor","onClick","Status","TodoList","pathname","useLocation","filteredTodos","Active","Completed","All","FilterNavLink","to","NavLink","_ref2","isActive","selected","TodosFilter","filters","path","Footer","some","App","_useLocalStorage","initialValue","parsedValue","localStorage","getItem","JSON","parse","_unused","setValue","newValue","setItem","stringify","useLocalStorage","_useLocalStorage2","_toConsumableArray","_Fragment","every","Root","HashRouter","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.396b2da5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  addNewTodo: (todo: Todo) => void,\n};\n\nexport const Header: React.FC<Props> = ({\n  addNewTodo,\n}) => {\n  const [title, setTitle] = useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!title.trim().length) {\n      return;\n    }\n\n    const newTodo: Todo = {\n      id: +new Date(),\n      completed: false,\n      title,\n    };\n\n    addNewTodo(newTodo);\n    setTitle('');\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n\n      <form\n        onSubmit={handleSubmit}\n      >\n        <input\n          type=\"text\"\n          data-cy=\"createTodo\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={title}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  todos: Todo[],\n  setTodos: (todos: Todo[]) => void,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  todos,\n  setTodos,\n}) => {\n  const { id, title, completed } = todo;\n  const [isFormActive, setIsFormActive] = useState(false);\n\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [newTitle, setNewTitle] = useState(title);\n\n  const toggleTodo = (itemId: number) => {\n    setTodos(\n      todos.map(item => (\n        item.id === itemId\n          ? { ...item, completed: !completed }\n          : item\n      )),\n    );\n  };\n\n  const deleteTodo = (todoId: number) => {\n    setTodos(todos.filter(item => item.id !== todoId));\n  };\n\n  const renameTodo = (todoId: number, updatedTitle: string) => {\n    setTodos(\n      todos.map(item => (\n        item.id === todoId\n          ? { ...item, title: updatedTitle }\n          : item\n      )),\n    );\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNewTitle(event.target.value);\n  };\n\n  const handleSubmit = (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    if (!newTitle) {\n      deleteTodo(id);\n\n      return;\n    }\n\n    if (newTitle !== title) {\n      renameTodo(todo.id, newTitle);\n    }\n\n    setIsFormActive(false);\n  };\n\n  const handleKeyUp = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      handleSubmit(event);\n    }\n\n    if (event.key === 'Escape') {\n      setNewTitle(title);\n      setIsFormActive(false);\n    }\n  };\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  });\n\n  return (\n    <li\n      className={classNames(\n        { completed: todo.completed },\n        { editing: isFormActive },\n      )}\n      onDoubleClick={() => {\n        setIsFormActive(!isFormActive);\n      }}\n    >\n      { !isFormActive\n        ? (\n          <div className=\"view\">\n            <input\n              id={`${id}`}\n              type=\"checkbox\"\n              className=\"toggle\"\n              checked={completed}\n              onChange={() => toggleTodo(id)}\n            />\n\n            <label htmlFor={`${id}`}>{title}</label>\n\n            <button\n              type=\"button\"\n              className=\"destroy\"\n              data-cy=\"deleteTodo\"\n              aria-label=\"deleteTodo\"\n              onClick={() => deleteTodo(id)}\n            />\n          </div>\n        ) : (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            placeholder=\"Empty todo will be deleted\"\n            value={newTitle}\n            ref={inputRef}\n            onChange={handleChange}\n            onKeyUp={handleKeyUp}\n            onBlur={handleSubmit}\n          />\n        )}\n    </li>\n  );\n};\n","export enum Status {\n  All = '/',\n  Active = '/active',\n  Completed = '/completed',\n}\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { TodoItem } from '../TodoItem';\nimport { Todo } from '../../types/Todo';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  todos: Todo[],\n  setTodos: (todos: Todo[]) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodos,\n}) => {\n  const { pathname } = useLocation();\n\n  const filteredTodos: Todo[] = todos.filter((todo: Todo) => {\n    switch (pathname) {\n      case Status.Active:\n        return !todo.completed;\n\n      case Status.Completed:\n        return todo.completed;\n\n      case Status.All:\n      default:\n        return todo;\n    }\n  });\n\n  return (\n    <ul className=\"todo-list\" data-cy=\"todosList\">\n      {filteredTodos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          todos={todos}\n          setTodos={setTodos}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const FilterNavLink: React.FC <Props> = ({\n  to,\n  title,\n}) => {\n  return (\n    <li>\n      <NavLink\n        to={to}\n        className={({ isActive }) => classNames({ selected: isActive })}\n      >\n        {title}\n      </NavLink>\n    </li>\n  );\n};\n","import React from 'react';\nimport { Status } from '../../types/Status';\nimport { FilterNavLink } from '../FilterNavLink';\n\nexport const TodosFilter: React.FC = () => {\n  const filters = [\n    {\n      path: Status.All,\n      title: 'All',\n    },\n    {\n      path: Status.Active,\n      title: 'Active',\n    },\n    {\n      path: Status.Completed,\n      title: 'Completed',\n    },\n  ];\n\n  return (\n    <ul className=\"filters\" data-cy=\"todosFilter\">\n      {filters.map(({ path, title }) => (\n        <FilterNavLink\n          key={title}\n          to={path}\n          title={title}\n        />\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodosFilter } from '../TodosFilter';\n\ntype Props = {\n  todos: Todo[],\n  setTodos: (todos: Todo[]) => void;\n};\n\nexport const Footer: React.FC<Props> = ({\n  todos,\n  setTodos,\n}) => {\n  const deleteAllCompleted = () => {\n    setTodos(todos.filter(item => !item.completed));\n  };\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${todos.filter(todo => !todo.completed).length} items left`}\n      </span>\n\n      <TodosFilter />\n\n      { todos.some(todo => todo.completed) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={deleteAllCompleted}\n        >\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n};\n","import React from 'react';\n\nimport { useLocalStorage } from './utils/CustomHooks';\nimport { Header } from './components/Header';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useLocalStorage('todos', []);\n\n  const addNewTodo = (todo: Todo) => {\n    setTodos([...todos, todo]);\n  };\n\n  const toggleAllTodos = () => {\n    setTodos(\n      todos.every((todo: Todo) => todo.completed)\n        ? todos.map((item: Todo) => ({ ...item, completed: !item.completed }))\n        : todos.map((item: Todo) => (\n          item.completed\n            ? item\n            : { ...item, completed: !item.completed }\n        )),\n    );\n  };\n\n  return (\n    <div className=\"todoapp\">\n      <Header\n        addNewTodo={addNewTodo}\n      />\n\n      {!!todos.length && (\n        <>\n          <section className=\"main\">\n            <input\n              type=\"checkbox\"\n              id=\"toggle-all\"\n              className=\"toggle-all\"\n              data-cy=\"toggleAll\"\n              checked={todos.every((item: Todo) => item.completed)}\n              onChange={toggleAllTodos}\n            />\n\n            <label htmlFor=\"toggle-all\">\n              Mark all as complete\n            </label>\n\n            <TodoList\n              todos={todos}\n              setTodos={setTodos}\n            />\n          </section>\n\n          <Footer\n            todos={todos}\n            setTodos={setTodos}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Todo } from '../types/Todo';\n\nexport function useLocalStorage(key: string, initialValue: Todo[]) {\n  const [value, setValue] = useState(() => {\n    try {\n      const parsedValue = localStorage.getItem(key);\n\n      return parsedValue ? JSON.parse(parsedValue) : initialValue;\n    } catch {\n      return initialValue;\n    }\n  });\n\n  const save = (newValue: Todo) => {\n    setValue(newValue);\n    localStorage.setItem(key, JSON.stringify(newValue));\n  };\n\n  return [value, save];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nconst Root = () => (\n  <HashRouter>\n    <App />\n  </HashRouter>\n);\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\n\nroot.render(<Root />);\n"],"sourceRoot":""}